<!-- views/profile.ejs -->
<!doctype html>
<html>
<head>
	<title>Middl</title>
	<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js'></script>
	<script src='strophe.js'></script>
	<script src='facebook.js'></script>
	<script src="//code.jquery.com/ui/1.11.0/jquery-ui.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.3.5/bootstrap-select.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.3.5/bootstrap-select.min.css"></script>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
	<link rel="stylesheet" href="test.css">
	<link rel="stylesheet" href="bootstrap.css">
	<script src="//cdn.jsdelivr.net/select2/3.4.8/select2.js"></script>
	<script src="//cdn.jsdelivr.net/select2/3.4.8/select2.min.js"></script>
	<link rel="stylesheet" href="//cdn.jsdelivr.net/select2/3.4.8/select2.css">


	  <script>

		var pairList = <%- JSON.stringify(user.facebook.pairList) %>;

    //gets timestamp
		function getTimestamp() {
			var d = new Date();
			return "" + d;
		}

    //sends custom message
		function sendMessageCustom(message, address) {
			console.log('I want to send ' + address + ': ' + message);
			var parameters = {id: "" + <%= user.facebook.id %>, recipient: address, message: message};
			$.post("http://middl.net/sendmessage", parameters, function(data) {
					console.log("Message sent!");
					});
			
		}
    //updateChat
		function updateChat() {
      var pair = $("tr.active").attr("id");
			var sender = pair.split("|")[0];
			var receiver = pair.split("|")[1];

			console.log(pair);

			if (sender && receiver) {
				var parameters = {pair: pair};
				
				$.post("http://middl.net/fetchrecord", parameters, function(data) {
					  var messageList = JSON.parse(data);
						$(".chat").empty();
						for (var i = 0; i < messageList.length; i++) {
							if (messageList[i].author === "SENDER") {
								$(".chat").append(generateLeftMessageItem(sender, messageList[i].message, messageList[i].timestamp));
							}
							else {
								$(".chat").append(generateRightMessageItem(receiver, messageList[i].message, messageList[i].timestamp));
							}
						}

						$("#warn_sender").contents().last().replaceWith("&nbsp;&nbsp;" + frienddict[sender].split(" ")[0]);
						$("#warn_receiver").contents().last().replaceWith("&nbsp;&nbsp;" + frienddict[receiver].split(" ")[0]);

						$(".panel-chat").animate({ scrollTop: $('.chat')[0].scrollHeight}, 1000);
				});
			}
		}
		function autoUpdateChat() {
      var pair = $("tr.active").attr("id");
			var sender = pair.split("|")[0];
			var receiver = pair.split("|")[1];


			if (sender && receiver) {
				var parameters = {pair: pair};
				
				$.post("http://middl.net/fetchrecord", parameters, function(data) {
					  var messageList = JSON.parse(data);
						if ($(".chat li").length !== messageList.length) {
							$(".chat").empty();
							for (var i = 0; i < messageList.length; i++) {
								if (messageList[i].author === "SENDER") {
									$(".chat").append(generateLeftMessageItem(sender, messageList[i].message, messageList[i].timestamp));
								}
								else {
									$(".chat").append(generateRightMessageItem(receiver, messageList[i].message, messageList[i].timestamp));
								}
							}

							$("#warn_sender").contents().last().replaceWith("&nbsp;&nbsp;" + frienddict[sender].split(" ")[0]);
							$("#warn_receiver").contents().last().replaceWith("&nbsp;&nbsp;" + frienddict[receiver].split(" ")[0]);

							$(".panel-chat").animate({ scrollTop: $('.chat')[0].scrollHeight}, 1000);
						}
						else {
						  console.log("nothing new!");
						}
				});
			}
		}
  //get chat entry that appears on the left
	function generateRightMessageItem(id, msg, timestamp) {
		return '<li class="right clearfix"><span class="chat-img pull-right">' +
			'<img src="http://graph.facebook.com/' + id + '/picture" alt="User Avatar"  />' + 
			'</span>' + 
			'<div class="chat-body clearfix">' + 
			'<div class="header">' + 
			'<small><span class="glyphicon glyphicon-time"></span>' + timestamp + '</small>' + 
			'<strong class="pull-right primary-font">' + frienddict[id] + '</strong>' +
			'</div>' + 
			'<p class="pull-right">' + msg + '</p></div></li>';
	}
  
  //get chat entry that appears on the right
  function generateLeftMessageItem(id, msg, timestamp) {
		return '<li class="left clearfix"><span class="chat-img pull-left">' +
			'<img src="http://graph.facebook.com/' + id + '/picture" alt="User Avatar"  />' + 
			'</span>' + 
			'<div class="chat-body clearfix">' + 
			'<div class="header">' + 
			'<strong class="primary-font">' + frienddict[id] + '</strong> <small class="pull-right">' + 
			'<span class="glyphicon glyphicon-time"></span>' + timestamp + '</small>' + 
			'</div>' + 
			'<p>' + msg + '</p></div></li>';
	}

  //center add conversation
  function centerAddConversation() {
		$(".chatdiv").hide();
		$(".ongoingdiv").hide();
		$(".adddiv").css("position", "fixed");
		$(".adddiv").css("margin-left", "20%");
		$(".adddiv").css("margin-right", "20%");
		$(".adddiv").css("left", "0");
		$(".adddiv").css("right", "0");
	}

  //decenter add conversation
  function decenterAddConversation() {
    $(".adddiv").css("position", "static");
		$(".adddiv").css("margin-left", "auto");
		$(".adddiv").css("margin-right", "auto");
		$(".chatdiv").show();
		$(".ongoingdiv").show();
	}

  function inactivateAllOngoingConversations() {
		$("tr").removeClass("active");
	}

  $(function() {
		$("#warn_sender").click(function(e) {
				var pair = $("tr.active").attr("id");
				var sender = pair.split("|")[0];
				var receiver = pair.split("|")[1];
				if (confirm("Are you sure you want to warn " + frienddict[sender] + "?"))
				{
					sendMessageCustom("You are actually talking to " + frienddict[receiver] + " using Middl. They don't know it yet though, so feel free to continue to conversation. If you are confused, find out how this works at http://middl.net", sender);
					alert(frienddict[sender] + " was notified that they are talking to " + frienddict[receiver] + ".");
				  
					} else {
					e.preventDefault();
					}

				});

		$("#warn_receiver").click(function(e) {
				var pair = $("tr.active").attr("id");
				var sender = pair.split("|")[0];
				var receiver = pair.split("|")[1];
				if (confirm("Are you sure you want to warn " + frienddict[receiver] + "?"))
				{
					sendMessageCustom("You are actually talking to " + frienddict[sender] + " using Middl. They don't know it yet though, so feel free to continue the conversation. If you are confused, find out how this works at http://middl.net", receiver);
					alert(frienddict[receiver] + " was notified that they are talking to " + frienddict[sender] + ".");
				  
					} else {
					e.preventDefault();
					}

				});
		
		$("#warn_both").click(function(e) {
				var pair = $("tr.active").attr("id");
				var sender = pair.split("|")[0];
				var receiver = pair.split("|")[1];
				if (confirm("Are you sure?"))
				{
					sendMessageCustom("You've been Middl'd! You were actually talking to " + frienddict[sender] + " the whole time! If you are confused, find out how this works at http://middl.net", receiver);
					sendMessageCustom("You've been Middl'd! You were actually talking to " + frienddict[receiver] + " the whole time! If you are confused, find out how this works at http://middl.net", sender);
					alert("The gig is now up.");
				  
				} else {
					e.preventDefault();
				}

			});

			$("#close_converasation").click(function() {
				var pair = $("tr.active").attr("id");
				var sender = pair.split("|")[0];
				var receiver = pair.split("|")[1];
				var parameters = {id: "" + <%= user.facebook.id %>, sender: sender, receiver: receiver, timestamp: getTimestamp()};
				var idx = -1;
				for (var i = 0; i < pairList.length; i++) {
					if (pairList[i].sender == sender 
						   && pairList[i].receiver == receiver) {
						idx = i;
						break;
					}
				}
				if (idx === -1) {
				   console.log("idx not found");
				}
				else {
					pairList.splice(idx, 1);
					$.post("http://middl.net/delpair", parameters, function(data) {
						$("tr.active").remove();
						console.log("SUccESS!");
						if ($(".conversationTable tr").length === 0) {
								centerAddConversation();
						}
						else {
								$(".conversationTable tr:first").addClass("active");
								updateChat();
						}
					});
				}
        

			});

			$(".conversationTable").bind("click", "tr", function(event) {
				$("tr").removeClass("active");
				$(event.target).closest("tr").addClass("active");
					updateChat();
				});

	
			//add conversation
			$("#add_conversation").click(function() {
				var sender = $("#person1 option:selected").val();
				var receiver = $("#person2 option:selected").val();
				var message = $("#initMessage").val();
				
				if (!message) {
				  message = "Yo!";
					}

				var pair = sender + "|" + receiver + "|" + <%= user.facebook.id %>;



				$("form")[0].reset();
				$("#person1").select2("val", "");
        $("#person2").select2("val", "");
        
				var parameters = {id: "" + <%= user.facebook.id %>, sender: sender, receiver: receiver}
				$.post("http://middl.net/addpair", parameters, function(data) {
						console.log("addpair successful");
						decenterAddConversation();
						$("tr").removeClass("active");
						
						$(".conversationTable").append(
						
							$("<tr class='active' id='" + pair + "'><td>" + frienddict[sender] + "</td><td>" + frienddict[receiver] + "</td></tr>")
							
						);
						sendMessageCustom(message, receiver);
						pairList.push({sender: sender, receiver: receiver});
						var parameters = {message: message, pair: sender + "|" + receiver + "|" + <%= user.facebook.id %>, id: "SENDER", timestamp: getTimestamp()};
					$.post("http://middl.net/addmessage", parameters, function(data) {
							console.log("addmessage successful");
							updateChat();
							$("#dialogErrors").hide();

					});
				})
				.fail(function(xhr, textStatus, errorThrown) {
						$("#dialogErrors").html("<i>Error: " + xhr.responseText + "</i>");
						$("#dialogErrors").show();
						$(".paneladd").effect("shake", {times: 3}, 80);
						});

			});



	});
  
  friendlist = null;
	frienddict = {};

		$(document).bind('FBSDKLoaded', function () {



      setInterval(function() {
				if ($(".conversationTable tr").length > 0) {
				  console.log("autoupdate chat");
				  autoUpdateChat();
					}
			}, 60000);

			setTimeout(function() {
				
				if (friendlist) {
					$(".loader").hide();
					$(".container").show();
					$("#dialogErrors").hide();
				}

    for (var i = 0; i < pairList.length; i++) {
		   var sender = pairList[i].sender;
			 var receiver = pairList[i].receiver;
		   var pair = sender + "|" + receiver + "|" + <%= user.facebook.id %>;
			 if (i == 0) {
						$(".conversationTable").append(
							$("<tr class='active' id='" + pair + "'><td>" + frienddict[sender] + "</td><td>" + frienddict[receiver] + "</td></tr>")
						);

			 }
			 else
			 {
						$(".conversationTable").append(
							$("<tr id='" + pair + "'><td>" + frienddict[sender] + "</td><td>" + frienddict[receiver] + "</td></tr>")
						);
			 }
		}
		 
		  
			
			if ($(".conversationTable tr").length === 0) {
			   centerAddConversation();
			}
      else {
         updateChat();
			}

				
			}, 2500);

			FB.getLoginStatus(function(response) {
				if (response.authResponse) {
				FB.api("/me/friends", function(data) {
					friendlist = data.data;
					console.log(friendlist);
							 friendlist.sort(function(a,b) {
								     if (a.name > b.name) return 1;
										     else if (a.name < b.name) return -1;
												     else return 0
														 });
							 $.each(friendlist, function(idx, value) {
								 frienddict[value.id] = value.name;
								 $(".friendSelector").append(
									 $("<option></option>").val(value.id).text(value.name)
								 );
							 });
				$(".friendSelector").select2({minimumInputLength:2, allowClear:true});
					});
					console.log(FB);
					var parameters = {id: "" + <%= user.facebook.id %>, token: response.authResponse.accessToken};
					console.log(parameters);
					$.post("http://middl.net/addserverconnection", parameters, function(data) {
							console.log("Successfully established server connection.");
							}); 
				}
				else {
					console.log(response);
				}

			});
		});
  </script>

</head>
<body>
<div id="fb-root"></div>



<nav class="navbar navbar-inverse" role="navigation">
   <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" 
         data-target="#example-navbar-collapse">
         <span class="sr-only">Toggle navigation</span>
         <span class="icon-bar"></span>
         <span class="icon-bar"></span>
         <span class="icon-bar"></span>
      </button>
			<a class="navbar-brand" href="#"><%= user.facebook.name %></a>
   </div>
   <div class="collapse navbar-collapse" id="example-navbar-collapse">
      <ul class="nav navbar-nav">
         <li class="active"><a href="#">Conversations</a></li>
         <li><a href="/archive">Archive</a></li>
         <li><a href="/faq">FAQ</a></li>
         <li><a href="/namereplace">Name Replacement</a></li>
         <li><a href="/contact">Contact</a></li>
         
      </ul>
      <ul class="nav navbar-nav navbar-right">
         <li class="pull-right"><a href="/logout">Logout</a></li>
      </ul>
   </div>
</nav>

<div class="loader">
	    <span></span>
			    <span></span>
					    <span></span>
							<h3>Make sure programs like AdBlock and DoNotTrackMe are not blocking the Facebook Connection.</h3>
						</div>

<div style="display:none" class="container">
    <div class="row">
        <div class="col-sm-12 col-md-4">
            <div class="adddiv panel panel-primary paneladd">
		<div class="panel-heading">
                    <span class="glyphicon glyphicon-plus"></span> Add Conversation
                </div>
                <div class="panel-add" style="padding:10px">
									<div style="color:white" id="dialogErrors"> Error! </div>

                      <form>
					<div class="row" style="padding-right:20px;padding-left:20px">
                                                <small>First Person:</small>
						<select style="width:50%;color:black" id="person1" class="pull-right friendSelector"><option value="">Select a Friend</option></select>
					</div>
					<div class="row" style="margin-top:10px;padding-right:20px;padding-left:20px">
                                                <small> Second Person:</small>
						<select style="width:50%;color:black" id="person2" class="pull-right friendSelector"><option value="">Select a Friend</option></select>
					</div>
					<div class="row" style="margin-top:10px;padding-right:20px;padding-left:20px">
					
						<label for="initMessage">Initial Message to Second Person:</label>
						<input style="width:100%;color:black" class="pull-right" name="initMessage" id="initMessage" placeholder="Yo!"></input>
					</div>
                       </form>
                       <div style="text-align:center">
			<button style="margin-top:10px" class="btn btn-small btn-success" id="add_conversation"><span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;Add Conversation</button>
                       </div>

                </div>
            </div>
            <div class="ongoingdiv panel panel-primary panelongoing">
		<div class="panel-heading">
                    <span class="glyphicon glyphicon-play-circle"></span> Ongoing Conversations
                </div>
                <div class="panel-list">
                       <table class="table table-hover">
                          <tbody class="conversationTable">
                          </tbody>
                       </table>
                </div>
            </div>

        </div>
        <div class="col-sm-12 col-md-8">
            <div class="chatdiv panel panel-primary panelmain">
                <div class="panel-heading">
                    <span class="glyphicon glyphicon-comment"></span> Chat
                </div>
                <div class="panel-chat">
                    <ul class="chat">
                    </ul>
                </div>
<div class="panel-footer">
                    Reveal to:
                    <div>
			<button class="btn btn-info btn-small" id="warn_sender"><span class="glyphicon glyphicon-eye-close"></span>&nbsp;&nbsp;Jack Sparrow </button>
			<button class="btn btn-info btn-small" id="warn_receiver"><span class="glyphicon glyphicon-eye-close"></span>&nbsp;&nbsp;Hongyu Chen </button>
			<button class="btn btn-warning btn-small" id="warn_both"><span class="glyphicon glyphicon-eye-open"></span>&nbsp;&nbsp;Everyone</button>
                        <button class="btn btn-danger btn-small pull-right" id="close_converasation"><span class="glyphicon glyphicon-remove"></span>&nbsp;&nbsp; End </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
	<div id="footer" style="position:fixed;left:0;bottom:0;right:0;text-align:center">
		Copyright &copy; 2014 &middot; All Rights Reserved &middot; <a href="http://www.middl.net"> Middl </a>
																											        </div>
	<script>
  window.fbAsyncInit = function() {
	     FB.init({appId: '321198970642', status: true, oauth: true, cookie: true,
			              xfbml: true});

		     jQuery(document).trigger('FBSDKLoaded');
	
		     if (window.fbAsyncInited) {
			     fbAsyncInited();
			   }
	   };
   (function() {
		     var e = document.createElement('script');
		     e.async = true;
		     e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';
		     document.getElementById('fb-root').appendChild(e);
		   }());
 </script>
 </body>
</html>
